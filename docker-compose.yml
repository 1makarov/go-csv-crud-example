version: '3.9'

services:
  app:
    build: .
    container_name: store
    depends_on:
      - postgres
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
    restart: always
    env_file:
      - .env.example
    networks:
      - application

  postgres:
    image: postgres:latest
    container_name: pg
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env.example
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - ./.build/volumes/databases/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - application

  migrate:
    container_name: migrate
    image: migrate/migrate
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env.example
    volumes:
      - ./migrations:/migrations
    command: [
        "-path", "/migrations", "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?sslmode=disable", "up"
    ]
    networks:
      - application

networks:
  application:
    driver: bridge